name: build
on:
  push:
    branches:
      - main
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:
jobs:
  setup:
    name: Setup
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{steps.set-matrix.outputs.set-matrix}}
    steps:
      - name: Checkout the Git repository
        uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        continue-on-error: true
        with:
          cache: 'pip'
      - run: pip install -r requirements.txt
      - name: Get repo list
        id: set-matrix
        run: |
          echo "::set-output name=set-matrix::$(python ./scripts/build.py repos --json)"
  build:
    name: Build package
    runs-on: ubuntu-latest
    needs: [setup]
    strategy:
      matrix: ${{fromJson(needs.setup.outputs.matrix)}}
      fail-fast: false
    steps:
      - name: Checkout the Git repository
        uses: actions/checkout@v2
      - name: Login to Docker Registry
        uses: docker/login-action@v1
        with:
          registry: registry.eeems.codes
          username: github
          password: ${{ secrets.CR_PAT }}
      - uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.SSH_KEY }}
      - uses: actions/setup-python@v2
        continue-on-error: true
        with:
          cache: 'pip'
      - run: pip install -r requirements.txt
      - name: Pacman cache
        uses: actions/cache@v2
        with:
          path: cache
          key: ${{ runner.os }}
      - uses: satackey/action-docker-layer-caching@v0.0.11
        continue-on-error: true
      - name: Build ${{matrix.package}}
        run: |
          python ./scripts/build.py repos ${{matrix.package}}
        env:
          GPGKEY: ${{ secrets.GPGKEY }}
          GPG_PRIVKEY: ${{ secrets.GPG_PRIVKEY }}
          WORKDIR: workdir
          DOCKER_PRUNE: 1
          GITHUB_ACTIONS: 1
      - uses: actions/upload-artifact@v2
        with:
          name: packages
          path: packages
